import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load sample data (replace with your own)
df = pd.read_csv('traffic_data.csv')  # Needs columns like 'hour', 'day', 'speed', 'flow', etc.

# Feature engineering
df['timestamp'] = pd.to_datetime(df['timestamp'])
df['hour'] = df['timestamp'].dt.hour
df['day_of_week'] = df['timestamp'].dt.dayofweek

# Target: Traffic Volume
X = df[['hour', 'day_of_week', 'speed', 'occupancy']]  # change as needed
y = df['traffic_volume']  # the variable you want to estimate

# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluation
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))
print("RÂ²:", r2_score(y_test, y_pred))

# Plot
plt.scatter(y_test, y_pred, alpha=0.3)
plt.xlabel('Actual Volume')
plt.ylabel('Predicted Volume')
plt.title('Traffic Volume Prediction')
plt.show()

