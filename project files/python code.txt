import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error

# Sample synthetic data representing features affecting traffic volume
data = {
    'hour_of_day': [8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
    'day_of_week': [1, 1, 1, 1, 1, 2, 2, 2, 2, 2],
    'weather_condition': [0, 1, 0, 0, 1, 1, 0, 0, 1, 0],  # 0 = clear, 1 = rain
    'traffic_volume': [120, 150, 100, 130, 160, 170, 140, 135, 180, 190]
}

df = pd.DataFrame(data)

# Features and target
X = df.drop('traffic_volume', axis=1)
y = df['traffic_volume']

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a model
model = RandomForestRegressor()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate
mae = mean_absolute_error(y_test, y_pred)
print(f"Mean Absolute Error: {mae:.2f}")

# Example prediction for new data
new_data = pd.DataFrame({'hour_of_day': [18], 'day_of_week': [2], 'weather_condition': [0]})
predicted_volume = model.predict(new_data)
print(f"Predicted Traffic Volume: {predicted_volume[0]:.0f}")
